#BlueJ class context
comment0.target=Analizador
comment0.text=\r\n\ Lee\ la\ entrada\ del\ usuario\ y\ la\ interpreta\ como\ un\ comando.\ \r\n\ Devuelve\ el\ comando\ como\ un\ objeto.\r\n\ \r\n\ Si\ el\ comando\ analizado\ no\ se\ encuentra\ entre\ los\ existentes\ devuelve\ un\r\n\ objeto\ comando\ vacio\r\n
comment1.params=
comment1.target=Analizador()
comment1.text=\r\n\ Create\ a\ parser\ to\ read\ from\ the\ terminal\ window.\r\n
comment2.params=
comment2.target=java.lang.String\ getComando()
comment2.text=\r\n\ Obtiene\ el\ comando\ introducido\ por\ el\ usuario\r\n\ @return\ el\ siguiente\ comando\r\n
comment3.params=
comment3.target=java.lang.String\ getComandoAdministrador()
comment3.text=\r\n\ Analiza\ si\ el\ comando\ pertenece\ a\ los\ comandos\ del\ administrador\r\n\ @return\ comando\r\n
comment4.params=
comment4.target=java.lang.String\ getComandoEnfermero()
comment4.text=\r\n\ Analiza\ si\ el\ comando\ pertenece\ a\ los\ comandos\ del\ enfermero\r\n\ @return\ comando\r\n
comment5.params=
comment5.target=java.lang.String\ getComandoTecnico()
comment5.text=\r\n\ Analiza\ si\ el\ comando\ pertenece\ a\ los\ comandos\ del\ tecnico\r\n\ @return\ comando.\r\n
comment6.params=
comment6.target=void\ mostrarComandosAdministrador()
comment6.text=\r\n\ Imprime\ los\ comandos\ validos\ para\ el\ perfil\ administrador.\r\n
comment7.params=
comment7.target=void\ mostrarComandosEnfermero()
comment7.text=\r\n\ Imprime\ los\ comandos\ validos\ para\ el\ perfil\ de\ enfermero.\r\n
comment8.params=
comment8.target=void\ mostrarComandosTecnico()
comment8.text=\r\n\ Imprime\ los\ comandos\ validos\ para\ el\ perfil\ de\ tecnico.\r\n
numComments=9
